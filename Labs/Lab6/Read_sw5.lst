                 -1   $modde2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   org 0000H
0000              3   
0000              4            CSEG at 0
0000 0202C9       5            ljmp mycode
0003              6   
0030              7            DSEG at 30H
0030              8   bcd:     ds 3
0033              9   x:       ds 2
0035             10   y:       ds 2
0037             11   
0000             12   bseg
0000             13   mf:   dbit 1
0001             14   
                 -1   $include(math16.asm)
                428   $LIST
01DD             16   
01DD             17            CSEG
01DD             18   
01DD             19   ; Look-up table for 7-seg displays
01DD             20   myLUT:
01DD C0F9A4B0    21       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
01E2 9282F880    22       DB 092H, 082H, 0F8H, 080H, 090H        ; 5 TO 9
     90
01E7 8883C6A1    23       DB 088H, 083H, 0C6H, 0A1H, 086H, 08EH  ; A to F
     868E
01ED             24   
01ED             25            CSEG
01ED             26   
01ED             27   ; Look-up table for 7-seg displays. 
01ED             28   T_7seg:
01ED 40792430    29       DB 40H, 79H, 24H, 30H, 19H
     19
01F2 12027800    30       DB 12H, 02H, 78H, 00H, 10H
     10
01F7             31   
01F7             32   wait_for_key1:
01F7             33            key1_is_one:
01F7 20F9FD      34            jb KEY.1, key1_is_one ; loop while the button is not pressed
01FA             35            key1_is_zero:
01FA 30F9FD      36            jnb KEY.1, key1_is_zero ; loop while the button is pressed
01FD 22          37            ret
01FE             38   
01FE             39   
                 40   domath mac
                 41   	Load_x(%0)
                 42   	Load_y(%1)
                 43   	lcall %2
                 44   	lcall hex2bcd
                 45   	lcall Display_BCD
                 46   	lcall wait_for_key1
                 47   endmac
01FE             48   
01FE             49   Display:
01FE 9001DD      50            mov dptr, #myLUT
0201             51            ; Display Digit 0
0201 E530        52       mov A, bcd+0
0203 540F        53       anl a, #0fh
0205 93          54       movc A, @A+dptr
0206 F591        55       mov HEX0, A
0208             56            ; Display Digit 1
0208 E530        57       mov A, bcd+0
020A C4          58       swap a
020B 540F        59       anl a, #0fh
020D 93          60       movc A, @A+dptr
020E F592        61       mov HEX1, A
0210             62            ; Display Digit 2
0210 E531        63       mov A, bcd+1
0212 540F        64       anl a, #0fh
0214 93          65       movc A, @A+dptr
0215 F593        66       mov HEX2, A
0217             67            ; Display Digit 3
0217 E531        68       mov A, bcd+1
0219 C4          69       swap a
021A 540F        70       anl a, #0fh
021C 93          71       movc A, @A+dptr
021D F594        72       mov HEX3, A
021F             73            ; Display Digit 4
021F E532        74       mov A, bcd+2
0221 540F        75       anl a, #0fh
0223 93          76       movc A, @A+dptr
0224 F58E        77       mov HEX4, A
0226 22          78       ret
0227             79   
0227             80   Shift_Digits:
0227 7804        81            mov R0, #4 ; shift left four bits
0229             82   Shift_Digits_L0:
0229 C3          83            clr c
022A E530        84            mov a, bcd+0
022C 33          85            rlc a
022D F530        86            mov bcd+0, a
022F E531        87            mov a, bcd+1
0231 33          88            rlc a
0232 F531        89            mov bcd+1, a
0234 E532        90            mov a, bcd+2
0236 33          91            rlc a
0237 F532        92            mov bcd+2, a
0239 D8EE        93            djnz R0, Shift_Digits_L0
023B             94            ; R7 has the new bcd digit      
023B EF          95            mov a, R7
023C 4530        96            orl a, bcd+0
023E F530        97            mov bcd+0, a
0240             98            ; make the four most significant bits of bcd+2 zero
0240 E532        99            mov a, bcd+2
0242 540F       100            anl a, #0fH
0244 F532       101            mov bcd+2, a
0246 22         102            ret
0247            103   
0247            104   Wait50ms:
0247            105   ;33.33MHz, 1 clk per cycle: 0.03us
0247 781E       106            mov R0, #30
0249 794A       107   L3: mov R1, #74
024B 7AFA       108   L2: mov R2, #250
024D DAFE       109   L1: djnz R2, L1 ;3*250*0.03us=22.5us
024F D9FA       110       djnz R1, L2 ;74*22.5us=1.665ms
0251 D8F6       111       djnz R0, L3 ;1.665ms*30=50ms
0253 22         112       ret
0254            113   
0254            114   ; Check if SW0 to SW15 are toggled up.  Returns the toggled switch in
0254            115   ; R7.  If the carry is not set, no toggling switches were detected.
0254            116   ReadNumber:
0254 ACE8       117            mov r4, SWA ; Read switches 0 to 7
0256 AD95       118            mov r5, SWB ; Read switches 8 to 15
0258 EC         119            mov a, r4
0259 4D         120            orl a, r5
025A 6029       121            jz ReadNumber_no_number
025C 120247     122            lcall Wait50ms ; debounce
025F E5E8       123            mov a, SWA
0261 C3         124            clr c
0262 9C         125            subb a, r4
0263 7020       126            jnz ReadNumber_no_number ; it was a bounce
0265 E595       127            mov a, SWB
0267 C3         128            clr c
0268 9D         129            subb a, r5
0269 701A       130            jnz ReadNumber_no_number ; it was a bounce
026B 7F10       131            mov r7, #16 ; Loop counter
026D            132   ReadNumber_L0:
026D C3         133            clr c
026E EC         134            mov a, r4
026F 33         135            rlc a
0270 FC         136            mov r4, a
0271 ED         137            mov a, r5
0272 33         138            rlc a
0273 FD         139            mov r5, a
0274 4004       140            jc ReadNumber_decode
0276 DFF5       141            djnz r7, ReadNumber_L0
0278 800B       142            sjmp ReadNumber_no_number       
027A            143   ReadNumber_decode:
027A 1F         144            dec r7
027B D3         145            setb c
027C            146   ReadNumber_L1:
027C E5E8       147            mov a, SWA
027E 70FC       148            jnz ReadNumber_L1
0280            149   ReadNumber_L2:
0280 E595       150            mov a, SWB
0282 70FC       151            jnz ReadNumber_L2
0284 22         152            ret
0285            153   ReadNumber_no_number:
0285 C3         154            clr c
0286 22         155            ret
0287            156            
0287            157   DisplayStudentNumber:
0287 7597B0     158       mov HEX7, #0B0H
028A 7596B0     159       mov HEX6, #0B0H
028D 758FA4     160       mov HEX5, #0A4H
0290 758E99     161       mov HEX4, #099H
0293 759492     162       mov HEX3, #092H
0296 7593F9     163       mov HEX2, #0F9H
0299 7592A4     164       mov HEX1, #0A4H
029C 7591F8     165       mov HEX0, #0F8H
029F 22         166       ret
02A0            167   
02A0            168   ; An unsigned 16-bit number results in a 5-digit BCD number.
02A0            169   ; Use HEX0 to HEX4 to display it
02A0            170   Display_BCD:
02A0            171            
02A0 9001ED     172            mov dptr, #T_7seg
02A3            173   
02A3 E532       174            mov a, bcd+2
02A5 540F       175            anl a, #0FH
02A7 93         176            movc a, @a+dptr
02A8 F58E       177            mov HEX4, a
02AA            178            
02AA E531       179            mov a, bcd+1
02AC C4         180            swap a
02AD 540F       181            anl a, #0FH
02AF 93         182            movc a, @a+dptr
02B0 F594       183            mov HEX3, a
02B2            184            
02B2 E531       185            mov a, bcd+1
02B4 540F       186            anl a, #0FH
02B6 93         187            movc a, @a+dptr
02B7 F593       188            mov HEX2, a
02B9            189   
02B9 E530       190            mov a, bcd+0
02BB C4         191            swap a
02BC 540F       192            anl a, #0FH
02BE 93         193            movc a, @a+dptr
02BF F592       194            mov HEX1, a
02C1            195            
02C1 E530       196            mov a, bcd+0
02C3 540F       197            anl a, #0FH
02C5 93         198            movc a, @a+dptr
02C6 F591       199            mov HEX0, a
02C8            200            
02C8 22         201            ret
02C9            202   
02C9            203   
02C9            204   mycode:
02C9 75817F     205            mov SP, #7FH
02CC            206            
02CC            207            ;Display student number below:
02CC 5187       208            call DisplayStudentNumber
02CE 7E28       209            mov R6,#40
02D0 5147       210            wait2sec: call Wait50ms
02D2 DEFC       211            djnz R6,wait2sec
02D4 7E00       212            mov R6,#0
02D6 75977F     213            mov HEX7,#7FH
02D9 75967F     214            mov HEX6,#7FH
02DC 758F7F     215            mov HEX5,#7FH
02DF            216            ;Resume to main program:
02DF            217            
02DF E4         218            clr a
02E0 F5E8       219            mov LEDRA, a
02E2 F595       220            mov LEDRB, a
02E4 F59E       221            mov LEDRC, a
02E6 F5F8       222            mov LEDG, a
02E8 F530       223            mov bcd+0, a
02EA F531       224            mov bcd+1, a
02EC F532       225            mov bcd+2, a
02EE 1201FE     226            lcall Display
02F1            227   
02F1            228   forever:
02F1 120254     229            lcall ReadNumber
02F4 50FB       230            jnc forever
02F6 120227     231            lcall Shift_Digits
02F9 1201FE     232            lcall Display
02FC 75E87F     233            mov LEDRA,#07FH
02FF 0202F1     234            ljmp forever
0302            235            
0302            236   newforever:
0302 80FE       237            jmp newforever  
0304            238   end
